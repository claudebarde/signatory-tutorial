// WARNING: This file is autogenerated and should NOT be modified
{
    "build": "8fe6b41",
    "configHash": "53c4caeaef9c67ddc6490b393fa068b1e58186ac79d1f91a9d78ea479b1469c1",
    "tasks": {
        "clean": {
            "name": "@taqueria/plugin-core",
            "type": "npm"
        },
        "ligo": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "compile": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        },
        "test": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        }
    },
    "operations": {},
    "templates": {
        "contract": {
            "name": "@taqueria/plugin-ligo",
            "type": "npm"
        }
    },
    "plugins": [
        {
            "name": "@taqueria/plugin-core",
            "version": "0.1",
            "schema": "1.0",
            "alias": "core",
            "tasks": [
                {
                    "task": "clean",
                    "command": "clean",
                    "description": "Clean all the Taqueria-related docker images",
                    "encoding": "application/json",
                    "handler": "proxy",
                    "options": []
                }
            ],
            "operations": [],
            "templates": []
        },
        {
            "name": "@taqueria/plugin-ligo",
            "version": "0.1",
            "schema": "1.0",
            "alias": "ligo",
            "tasks": [
                {
                    "task": "ligo",
                    "command": "ligo",
                    "description": "This task allows you to run arbitrary LIGO native commands. Note that they might not benefit from the abstractions provided by Taqueria",
                    "encoding": "none",
                    "handler": "proxy",
                    "options": [
                        {
                            "shortFlag": "c",
                            "flag": "command",
                            "description": "The command to be passed to the underlying LIGO binary, wrapped in quotes",
                            "required": true,
                            "type": "string"
                        }
                    ]
                },
                {
                    "task": "compile",
                    "command": "compile <sourceFile>",
                    "aliases": [
                        "c",
                        "compile-ligo"
                    ],
                    "description": "Compile a smart contract written in a LIGO syntax to Michelson code, along with its associated storages and parameters files if they are found",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": []
                },
                {
                    "task": "test",
                    "command": "test <sourceFile>",
                    "description": "Test a smart contract written in LIGO",
                    "encoding": "json",
                    "handler": "proxy",
                    "options": []
                }
            ],
            "operations": [],
            "templates": [
                {
                    "template": "contract",
                    "command": "contract <sourceFileName>",
                    "description": "Create a LIGO contract with boilerplate code",
                    "options": [
                        {
                            "shortFlag": "s",
                            "flag": "syntax",
                            "description": "The syntax used in the contract",
                            "type": "string"
                        }
                    ],
                    "positionals": [
                        {
                            "placeholder": "sourceFileName",
                            "description": "The name of the LIGO contract to generate",
                            "type": "string"
                        }
                    ],
                    "handler": "function",
                    "encoding": "none"
                }
            ]
        }
    ]
}